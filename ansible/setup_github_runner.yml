---
- name: Setup GitHub Runner
  hosts: github_runners
  become: yes

  vars:
    github_app_id: "{{ lookup('env', 'GITHUB_APP_ID') }}"
    github_installation_id: "{{ lookup('env', 'GITHUB_INSTALLATION_ID') }}"
    github_private_key_path: "{{ lookup('env', 'GITHUB_PRIVATE_KEY_PATH') }}"
    runner_group: "{{ lookup('env', 'RUNNER_GROUP') | default('CCOE') }}"
    runner_labels: "{{ lookup('env', 'RUNNER_LABELS') | default('self-hosted') }}"
    runner_release: "{{ lookup('env', 'RUNNER_RELEASE') | default('v2.303.0/actions-runner-linux-x64-2.303.0.tar.gz') }}"
    runner_home: "/export/home/github-runner"
    github_org: "CenturyLink"

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install required packages
      apt:
        name:
          - curl
          - git
          - jq
          - openssl
          - cron
        state: present

    - name: Add GitHub runner user
      user:
        name: github-runner
        shell: /bin/bash
        create_home: yes
        home: "{{ runner_home }}"

    - name: Set correct ownership of the GitHub runner home directory
      become: yes
      become_user: root
      file:
        path: "{{ runner_home }}/."
        state: directory
        owner: github-runner
        group: users
        mode: '0700'

    - name: Copy private key file
      copy:
        src: "{{ github_private_key_path }}"
        dest: "{{ runner_home }}/private-key.pem"
        owner: github-runner
        group: github-runner
        mode: '0600'

    - name: Check if GitHub runner tarball exists
      stat:
        path: "{{ runner_home }}/actions-runner.tar.gz"
      register: runner_tarball

    - name: Download GitHub runner
      get_url:
        url: "https://github.com/actions/runner/releases/download/{{ runner_release }}"
        dest: "{{ runner_home }}/actions-runner.tar.gz"
        mode: '0644'
      when: not runner_tarball.stat.exists

    - name: Change ownership of the downloaded file
      file:
        path: "{{ runner_home }}/actions-runner.tar.gz"
        owner: github-runner
        group: github-runner
        mode: '0644'

    - name: Extract GitHub runner
      unarchive:
        src: "{{ runner_home }}/actions-runner.tar.gz"
        dest: "{{ runner_home }}/"
        remote_src: yes
        owner: github-runner
        group: github-runner

    - name: Set correct permissions for .path file
      file:
        path: "{{ runner_home }}/.path"
        owner: github-runner
        group: github-runner
        mode: '0644'

    - name: Set correct permissions for .env file
      file:
        path: "{{ runner_home }}/.env"
        owner: github-runner
        group: github-runner
        mode: '0644'

    - name: Create token renewal script
      copy:
        content: |
          #!/bin/bash
          APP_ID="{{ github_app_id }}"
          INSTALLATION_ID="{{ github_installation_id }}"
          PRIVATE_KEY_PATH="{{ runner_home }}/private-key.pem"
          GITHUB_ORG="{{ github_org }}"

          header=$(echo -n '{"alg":"RS256","typ":"JWT"}' | openssl base64 -e -A | tr -d '=' | tr '/+' '_-')
          iat=$(date +%s)
          exp=$((iat + 600))
          payload=$(echo -n "{\"iat\":$iat,\"exp\":$exp,\"iss\":$APP_ID}" | openssl base64 -e -A | tr -d '=' | tr '/+' '_-')
          unsigned_token="$header.$payload"
          signature=$(echo -n "$unsigned_token" | openssl dgst -sha256 -sign "$PRIVATE_KEY_PATH" | openssl base64 -e -A | tr -d '=' | tr '/+' '_-')
          jwt="$unsigned_token.$signature"
          bearer_response=$(curl -s -X POST -H "Authorization: Bearer $jwt" -H "Accept: application/vnd.github.v3+json" https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens)
          bearer_token=$(echo $bearer_response | jq -r .token)
          if [ -z "$bearer_token" ] || [ "$bearer_token" = "null" ]; then
            echo "Failed to retrieve bearer token" >&2
            echo "Response: $bearer_response" >&2
            exit 1
          fi
          
          registration_response=$(curl -s -X POST -H "Authorization: Bearer $bearer_token" -H "Accept: application/vnd.github.v3+json" https://api.github.com/orgs/$GITHUB_ORG/actions/runners/registration-token)
          registration_token=$(echo $registration_response | jq -r .token)
          if [ -z "$registration_token" ] || [ "$registration_token" = "null" ]; then
            echo "Failed to retrieve registration token" >&2
            echo "Response: $registration_response" >&2
            exit 1
          fi
          echo $registration_token > {{ runner_home }}/token
        dest: "{{ runner_home }}/renew_token.sh"
        mode: '0755'

    - name: Change ownership of the script
      file:
        path: "{{ runner_home }}/renew_token.sh"
        owner: github-runner
        group: github-runner
        mode: '0755'

    - name: Execute token renewal script
      shell: "bash -x {{ runner_home }}/renew_token.sh"
      register: token_renewal_output
      ignore_errors: yes

    - name: Debug token renewal script output
      debug:
        var: token_renewal_output

    - name: Print contents of the token file
      shell: "cat {{ runner_home }}/token"
      register: token_file_contents
      ignore_errors: yes

    - name: Debug token file contents
      debug:
        var: token_file_contents.stdout

    - name: Configure Org GitHub runner
      shell: |
        cd {{ runner_home }}
        sudo -u github-runner ./config.sh --url "https://github.com/{{ github_org }}" --token $(cat {{ runner_home }}/token) --runnergroup "{{ runner_group }}" --labels "{{ runner_labels }}" --unattended

    - name: Install and start GitHub runner service
      shell: |
        cd {{ runner_home }}
        sudo ./svc.sh install
        sudo ./svc.sh start
        sudo ./svc.sh status
      register: runner_service_output

    - name: Debug runner service output
      debug:
        var: runner_service_output

